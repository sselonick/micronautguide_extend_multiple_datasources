plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "2.0.8"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}

dependencies {
    // tutorial
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")

    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")


    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("io.micronaut:micronaut-validation")



    // only implementation found in zip - tutorial
    annotationProcessor("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")


    implementation("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    // https://micronaut-projects.github.io/micronaut-sql/1.2.3/guide/index.html
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    compileOnly("org.graalvm.nativeimage:svm")

}


application {
    mainClass.set("example.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}



